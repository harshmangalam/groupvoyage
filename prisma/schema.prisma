generator client {
  provider        = "prisma-client-js"
  output          = "./generated/client"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Location {
  id               String             @id @default(uuid())
  city             String
  slug             String             @unique
  country          String
  active           Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  posterUrl        String?
  events           Event[]
  groups           Group[]            @relation("GroupToLocation")
  InstagramProfile InstagramProfile[]
}

model Group {
  id         String     @id @default(uuid())
  name       String     @unique
  slug       String     @unique
  details    String
  instagram  String?
  phone      String?
  email      String?
  meta       Json?
  source     String
  active     Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  logo       String?
  tagLine    String?
  posterUrls Json?
  events     Event[]
  locations  Location[] @relation("GroupToLocation")
}

model Event {
  id         String   @id @default(uuid())
  title      String
  slug       String   @unique
  durations  String?
  details    String?
  price      Int?
  locationId String
  groupId    String
  meta       Json?
  source     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isArchived Boolean  @default(false)
  posterUrls Json?
  includes   Json?
  excludes   Json?
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
}

model InstagramProfile {
  id         String     @id
  username   String     @unique
  name       String?
  followers  String?
  following  String?
  posts      String?
  profilePic String?
  Location   Location[]
}
